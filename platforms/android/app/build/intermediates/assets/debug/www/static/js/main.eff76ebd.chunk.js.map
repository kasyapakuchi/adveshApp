{"version":3,"sources":["constants/apiConstants.js","components/Header/Header.js","components/LoginForm/LoginForm.js","components/RegistrationForm/RegistrationForm.js","components/Home/Home.js","components/products.js","components/ListProducts.js","utils/PrivateRoute.js","components/AlertComponent/AlertComponent.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","withRouter","props","s","location","pathname","substring","length","charAt","toUpperCase","slice","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","className","onClick","localStorage","removeItem","history","push","renderLogout","useState","email","password","successMessage","state","setState","handleChange","e","target","value","prevState","redirectToHome","updateTitle","htmlFor","aria-describedby","placeholder","onChange","preventDefault","payload","axios","post","then","response","status","setItem","data","token","showError","code","catch","error","console","log","style","display","role","confirmPassword","sendDetailsToServer","useEffect","Products","products","map","product","shortName","longName","productID","src","imageUrls","alt","price","description","category","subcategory","material","colour","redirectToProducts","get","info","PrivateRoute","children","rest","render","getItem","from","AlertComponent","modalDisplay","toggleDisplay","closeModal","hideError","errorMessage","aria-hidden","App","title","updateErrorMessage","path","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.eff76ebd.chunk.js","sourcesContent":["export const API_BASE_URL = 'http://studioadvesh.azurewebsites.net';\r\nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import React from 'react';\r\nimport { Link,withRouter } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN_NAME } from '../../constants/apiConstants';\r\nfunction Header(props) {\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n    let title = capitalize(props.location.pathname.substring(1,props.location.pathname.length))\r\n    if(props.location.pathname === '/') {\r\n        title = 'Welcome'\r\n    }\r\n    function renderLogout() {\r\n        if(props.location.pathname === '/home'){\r\n            return(\r\n                <div className=\"ml-auto\">\r\n                    <button className=\"btn btn-danger\" onClick={() => handleLogout()}>Logout</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    function handleLogout() {\r\n        localStorage.removeItem(ACCESS_TOKEN_NAME)\r\n        props.history.push('/login')\r\n    }\r\n    return(\r\n\r\n    //     <nav class=\"navbar navbar-dark bg-dark\">\r\n    //     <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n    // <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    //   <span class=\"navbar-toggler-icon\"></span>\r\n    // </button>\r\n  \r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n  \r\n              <li class=\"nav-item active\">\r\n                <Link class=\"nav-link\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                < Link class=\"nav-link\"  to=\"/login\">Login</Link>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <Link class=\"nav-link\" to=\"/products\">Products</Link>\r\n              </li>\r\n            </ul>\r\n     <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n       <span class=\"navbar-toggler-icon\"></span>\r\n     </button><div className=\"row col-12 d-flex justify-content-center text-white\">\r\n                {renderLogout()}\r\n            </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default withRouter(Header);","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport './LoginForm.css';\r\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction LoginForm(props) {\r\n    const [state , setState] = useState({\r\n        email : \"\",\r\n        password : \"\",\r\n        successMessage: null\r\n    })\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        const payload={\r\n            \"email\":state.email,\r\n            \"password\":state.password,\r\n        }\r\n        axios.post(API_BASE_URL+'/register', payload)\r\n            .then(function (response) {\r\n                if(response.status === 200){\r\n                    setState(prevState => ({\r\n                        ...prevState,\r\n                        'successMessage' : 'Login successful. Redirecting to home page..'\r\n                    }))\r\n                    localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\r\n                    redirectToHome();\r\n                    props.showError(null)\r\n                }\r\n                else if(response.code === 204){\r\n                    props.showError(\"Username and password do not match\");\r\n                }\r\n                else{\r\n                    props.showError(\"Username does not exists\");\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    const redirectToHome = () => {\r\n        props.updateTitle('Home')\r\n        props.history.push('/home');\r\n    }\r\n    const redirectToAdmin = () => {\r\n        props.updateTitle('Home')\r\n        props.history.push('/home');\r\n    }\r\n    const redirectToRegister = () => {\r\n        props.history.push('/register'); \r\n        props.updateTitle('Register');\r\n    }\r\n    return(\r\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\r\n            <form>\r\n                <div className=\"form-group text-left\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" \r\n                       className=\"form-control\" \r\n                       id=\"email\" \r\n                       aria-describedby=\"emailHelp\" \r\n                       placeholder=\"Enter email\" \r\n                       value={state.email}\r\n                       onChange={handleChange}\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input type=\"password\" \r\n                       className=\"form-control\" \r\n                       id=\"password\" \r\n                       placeholder=\"Password\"\r\n                       value={state.password}\r\n                       onChange={handleChange} \r\n                />\r\n                </div>\r\n                <div className=\"form-check\">\r\n                </div>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleSubmitClick}\r\n                >Submit</button>\r\n            </form>\r\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                {state.successMessage}\r\n            </div>\r\n            <div className=\"registerMessage\">\r\n                <span>Dont have an account? </span>\r\n                <span className=\"loginText\" onClick={() => redirectToRegister()}>Register</span> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport './RegistrationForm.css';\r\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction RegistrationForm(props) {\r\n    const [state , setState] = useState({\r\n        email : \"\",\r\n        password : \"\",\r\n        confirmPassword: \"\",\r\n        successMessage: null\r\n    })\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n    const sendDetailsToServer = () => {\r\n        if(state.email.length && state.password.length) {\r\n            props.showError(null);\r\n            const payload={\r\n                \"email\":state.email,\r\n                \"password\":state.password,\r\n            }\r\n            axios.post(API_BASE_URL+'/user/register', payload)\r\n                .then(function (response) {\r\n                    if(response.status === 200){\r\n                        setState(prevState => ({\r\n                            ...prevState,\r\n                            'successMessage' : 'Login successful. Redirecting to home page..'\r\n                        }))\r\n                        localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\r\n                        redirectToHome();\r\n                        props.showError(null)\r\n                    } else{\r\n                        props.showError(\"Some error ocurred\");\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });    \r\n        } else {\r\n            props.showError('Please enter valid username and password')    \r\n        }\r\n        \r\n    }\r\n    const redirectToHome = () => {\r\n        props.updateTitle('Home')\r\n        props.history.push('/home');\r\n    }\r\n    const redirectToLogin = () => {\r\n        props.updateTitle('Login')\r\n        props.history.push('/login'); \r\n    }\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        if(state.password === state.confirmPassword) {\r\n            sendDetailsToServer()    \r\n        } else {\r\n            props.showError('Passwords do not match');\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\r\n            <form>\r\n                <div className=\"form-group text-left\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" \r\n                       className=\"form-control\" \r\n                       id=\"email\" \r\n                       aria-describedby=\"emailHelp\" \r\n                       placeholder=\"Enter email\" \r\n                       value={state.email}\r\n                       onChange={handleChange}\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"password\" \r\n                        placeholder=\"Password\"\r\n                        value={state.password}\r\n                        onChange={handleChange} \r\n                    />\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"confirmPassword\" \r\n                        placeholder=\"Confirm Password\"\r\n                        value={state.confirmPassword}\r\n                        onChange={handleChange} \r\n                    />\r\n                </div>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleSubmitClick}\r\n                >\r\n                    Register\r\n                </button>\r\n            </form>\r\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                {state.successMessage}\r\n            </div>\r\n            <div className=\"mt-2\">\r\n                <span>Already have an account? </span>\r\n                <span className=\"loginText\" onClick={() => redirectToLogin()}>Login here</span> \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegistrationForm);","import React,{ useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiConstants';\r\nimport axios from 'axios'\r\nfunction Home(props) {\r\n    useEffect(() => {\r\n        // axios.get(API_BASE_URL+'/user/me', { headers: { 'token': localStorage.getItem(ACCESS_TOKEN_NAME) }})\r\n        // .then(function (response) {\r\n        //     if(response.status !== 200){\r\n        //       redirectToLogin()\r\n        //     }\r\n        // })\r\n        // .catch(function (error) {\r\n        //   redirectToLogin()\r\n        // });\r\n      })\r\n    function redirectToLogin() {\r\n    props.history.push('/login');\r\n    }\r\n    return(\r\n        <div className=\"mt-2\">\r\n            Home page content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Home);","import React from 'react'\r\n\r\n\r\n\r\nconst Products = ({ products }) => {\r\n  return (\r\n    <div>\r\n      <center><h1>Product List</h1></center>\r\n      {products.map((product) => (\r\n        <div class=\"card-big\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{product.shortName}</h5>\r\n            <h6 class=\"card-subtitle mb-2 text-muted\">{product.longName}</h6>\r\n            <p class=\"card-text\">ID: {product.productID}</p>\r\n            <div class=\"col-sm-3\">\r\n                <img class=\"img-thumbnail rounded \" src={product.imageUrls} alt=\"Italian Trulli\"/>\r\n            </div>\r\n            <p class=\"card-text\">Price: {product.price}</p>\r\n            <p class=\"card-text\">Description: {product.description}</p>\r\n            <p class=\"card-text\">Category: {product.category}</p>\r\n            <p class=\"card-text\">Sub Category: {product.subcategory}</p>\r\n            <p class=\"card-text\">Material: {product.material}</p>\r\n            <p class=\"card-text\">Colour: {product.colour}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Products","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../constants/apiConstants';\r\nimport Products from './products'\r\n\r\nfunction ListProducts(props) {\r\n    const [state , setState] = useState({\r\n        successMessage: null,\r\n        products:[]\r\n    })\r\n  \r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        const payload={\r\n          products:state.products,\r\n          \"successMessage\":state.successMessage\r\n      }\r\n        axios.get(API_BASE_URL+'/products', payload)\r\n            .then(function (response) {\r\n                if(response.status === 200){\r\n                  console.info(response);\r\n                  \r\n                    state.successMessage = 'Login successful. Redirecting to home page..';\r\n                    state.products=response.data\r\n                         \r\n                    localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\r\n                    redirectToProducts();\r\n                    props.showError(null)\r\n                }\r\n                else if(response.code === 204){\r\n                    props.showError(\"Username and password do not match\");\r\n                }\r\n                else{\r\n                    props.showError(\"Username does not exists\");\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    const redirectToProducts = () => {\r\n        props.updateTitle('Products')\r\n        props.history.push('/products');\r\n    }\r\n    const redirectToAdmin = () => {\r\n        props.updateTitle('Home')\r\n        props.history.push('/home');\r\n    }\r\n    const redirectToRegister = () => {\r\n        props.history.push('/register'); \r\n        props.updateTitle('Register');\r\n    }\r\n    return(\r\n               <div><button onClick={handleSubmitClick}>list</button>\r\n                         <Products products={state.products} />\r\n\r\n</div>\r\n               \r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(ListProducts);","import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN_NAME } from '../constants/apiConstants';\r\nfunction PrivateRoute({ children, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          localStorage.getItem(ACCESS_TOKEN_NAME) ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\r\nimport './AlertComponent.css';\r\nfunction AlertComponent(props) {\r\n    const [modalDisplay, toggleDisplay] = useState('none');\r\n    const openModal = () => {\r\n        toggleDisplay('block');     \r\n    }\r\n    const closeModal = () => {\r\n        toggleDisplay('none'); \r\n        props.hideError(null);\r\n    }\r\n    useEffect(() => {\r\n        if(props.errorMessage !== null) {\r\n            openModal()\r\n        } else {\r\n            closeModal()\r\n        }\r\n    });\r\n    \r\n    return(\r\n        <div \r\n            className={\"alert alert-danger alert-dismissable mt-4\"} \r\n            role=\"alert\" \r\n            id=\"alertPopUp\"\r\n            style={{ display: modalDisplay }}\r\n        >\r\n            <div className=\"d-flex alertMessage\">\r\n                <span>{props.errorMessage}</span>\r\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default AlertComponent","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport LoginForm from './components/LoginForm/LoginForm';\r\nimport RegistrationForm from './components/RegistrationForm/RegistrationForm';\r\nimport Home from './components/Home/Home';\r\nimport ListProducts from './components/ListProducts'\r\nimport PrivateRoute from './utils/PrivateRoute';\r\nimport {\r\n  BrowserRouter as HashRouter,\r\n  Switch,\r\n  Route,Has\r\n} from \"react-router-dom\";\r\nimport AlertComponent from './components/AlertComponent/AlertComponent';  \r\nfunction App() {\r\n  const [title, updateTitle] = useState(null);\r\n  const [errorMessage, updateErrorMessage] = useState(null);\r\n  return (\r\n    \r\n    <HashRouter>\r\n    <div className=\"App\">\r\n      <Header title={title}/>\r\n        <div className=\"container d-flex align-items-center flex-column\">\r\n          <Switch>\r\n            <Route path=\"/\" exact={true}>\r\n            <Home/>\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </Route>\r\n            <PrivateRoute path=\"/home\">\r\n              <Home/>\r\n            </PrivateRoute>\r\n            <PrivateRoute path=\"/products\">\r\n              <ListProducts showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </PrivateRoute>\r\n          </Switch>\r\n          <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage}/>\r\n        </div>\r\n    </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}